# Blyan GPU Node Docker Image
# Supports both CPU and GPU inference with automatic model downloading

FROM nvidia/cuda:12.3.2-runtime-ubuntu22.04

# Prevent interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV TORCH_CUDA_ARCH_LIST="6.0;6.1;7.0;7.5;8.0;8.6;8.9;9.0"

# Set environment defaults for GPU node
ENV BLYAN_DATA_DIR=/data
ENV TOKENIZERS_PARALLELISM=false
ENV PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True,max_split_size_mb:128
ENV OMP_NUM_THREADS=1
ENV MKL_NUM_THREADS=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3-pip \
    git \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install UV (fast Python package manager) to global location
RUN curl -LsSf https://astral.sh/uv/install.sh | sh && \
    mv /root/.local/bin/uv /usr/local/bin/ && \
    mv /root/.local/bin/uvx /usr/local/bin/ && \
    rm -rf /root/.local

# Create app directory
WORKDIR /app

# Install Python dependencies - cache-friendly order
COPY requirements-gpu.txt /app/
RUN python3 -m pip install --upgrade pip && \
    pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121 && \
    uv pip install --system -r requirements-gpu.txt

# Create non-root user
RUN groupadd -r blyan && useradd -r -g blyan -d /home/blyan -s /bin/bash -m blyan

# Create data directories with proper ownership
RUN mkdir -p /data/models /data/blockchain /data/credentials && \
    chown -R blyan:blyan /data && \
    chmod -R 755 /data

# Copy application code
COPY --chown=blyan:blyan . /app/

# Copy entrypoint script
COPY --chown=blyan:blyan docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Switch to non-root user
USER blyan

# Expose P2P port
EXPOSE 8001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"]
CMD ["python3", "/app/run_gpu_node.py"]