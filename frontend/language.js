/**
 * Language management for Blyan
 */

// Language translations
const translations = {
    en: {
        // Header
        home: 'Home',
        chat: 'Chat',
        
        leaderboard: 'Leaderboard',
        joinNetwork: 'Join Network',
        technical: 'Technical',
        connectWallet: 'Connect Wallet',
        apiStatus: 'API',
        polStatus: 'PoL',
        offline: 'Offline',
        online: 'Online',
        enabled: 'Enabled',
        disabled: 'Disabled',
        unknown: 'Unknown',
        
        // Home page - Hero section
        heroTitle: 'Blyan',
        heroSubtitle: "Decentralized AI Network",
        heroDescription: 'Experience AI powered by collective intelligence. Chat with AI. Contribute your computing power to earn rewards.',
        
        // Vision section (new)
        visionTitle: 'Why We Built Blyan',
        visionTrustworthy: 'Transparent AI',
        visionTrustworthyDesc: 'Every weight, every decision, every improvement is recorded immutably on the blockchain.',
        visionDemocratic: 'Decentralizing AI Development',
        visionDemocraticDesc: 'Not just for tech giants anymore. Together, we can build and evolve AI models collectively.',
        visionEvolution: 'Blockchain AI Evolution',
        visionEvolutionDesc: 'AI evolves through learning blocks added to the blockchain.',
        visionComparison: 'Did you know? The energy Bitcoin uses in just 3 hours could train a GPT-4 level AI model. \nWith Proof-of-Learning, we turn computation into intelligence.',
        
        // Action cards
        chatWithAI: 'Chat with AI',
        chatDescription: 'Start a conversation with our decentralized AI. Powered by distributed experts across the network.',
        startChatting: 'Start Chatting',
        uploadDataset: 'Upload Dataset',
        uploadDescription: 'Contribute training data to improve AI models. Zero-cost participation with democratic governance.',
        uploadNow: 'Upload Now',
        joinTheNetwork: 'Join the Network',
        joinDescription: 'Share your computing power and earn rewards. One-click setup to become part of the AI network.',
        joinNow: 'Join Now',
        datasetExplorer: 'Dataset Explorer',
        explorerDescription: 'Explore community datasets, vote on proposals, and track data governance in real-time.',
        exploreDatasets: 'Explore Datasets',
        
        // Network status
        networkStatus: 'Network Status',
        activeExperts: 'Active Experts',
        networkNodes: 'Network Nodes',
        totalRequests: 'Total Requests',
        networkHealth: 'Network Health',
        
        // Footer
        advancedFeatures: 'Looking for advanced features?',
        viewDashboard: 'View Technical Dashboard & Analytics ‚Üí',
        
        // Chat page
        aiChat: 'Chat with `Blyan',
        chatWithDistributed: 'Chat with decentralized AI network',
        aiAssistant: 'Blyan AI',
        aiWelcomeMessage: "Hello! I'm powered by the Blyan decentralized network. Ask me anything!",
        aiThinking: 'Blyan is thinking...',
        typeYourMessage: 'Type your message...',
        send: 'Send',
        sendMessage: 'Send Message',
        
        // Join Network page
        joinNetworkTitle: 'Join the Blyan Network',
        shareComputingPower: 'Share your computing power and earn rewards',
        systemCheck: 'System Check',
        checkRequirements: "Let's check if your computer meets the requirements:",
        cpuRequirement: 'CPU: Multi-core processor',
        memoryRequirement: 'Memory: At least 4GB RAM available',
        networkRequirement: 'Network: Stable internet connection',
        gpuRequirement: 'GPU: Checking for AI acceleration hardware',
        browserRequirement: 'Browser: Modern browser with WebAssembly support',
        checkMySystem: 'Check My System',
        startYourNode: 'Start Your Node',
        oneClickSetup: 'One-click setup to join the network as an expert node:',
        nodeName: 'Node Name:',
        processingMode: 'Processing Mode:',
        cpuLight: 'CPU Only - 25% (Light)',
        cpuBalanced: 'CPU Only - 50% (Balanced)',
        cpuHigh: 'CPU Only - 75% (High)',
        gpuLight: 'GPU Accelerated - 25%',
        gpuBalanced: 'GPU Accelerated - 50%',
        gpuHigh: 'GPU Accelerated - 75%',
        startMyNode: 'üöÄ Start My Node',
        nodeRunning: '‚úÖ Node Running Successfully!',
        nodeId: 'Node ID:',
        status: 'Status:',
        active: 'Active',
        requestsServed: 'Requests Served:',
        disconnectNode: 'üîå Disconnect Node',
        earnRewards: 'Earn Rewards',
        estimatedEarnings: 'Your estimated earnings based on network activity:',
        perDay: 'per day (estimated)',
        earningsNote: 'üí° Earnings based on RTX 3090 benchmarks (~$210/day for 10 GPUs). Your actual earnings may vary.',
        advancedOptions: 'Advanced Options',
        wantMoreControl: 'Want more control? Check out the',
        technicalDashboard: 'technical dashboard',
        expertNodeManagement: 'for expert node management and detailed analytics.',
        
        // Technical/Explorer page
        explorerTitle: 'Blyan Explorer',
        overview: 'Overview',
        blockchainOverview: 'Blockchain Overview',
        expertManagement: 'Expert Management',
        expertAnalytics: 'Expert Analytics',
        dagView: 'DAG View',
        p2pNetwork: 'P2P Network',
        
        // Blockchain Overview tab
        metaChain: 'Meta-chain (Architecture)',
        parameterChain: 'Parameter-chain (Experts)',
        chainHeight: 'Chain Height',
        totalBlocks: 'Total Blocks',
        modelArchitecture: 'Model Architecture',
        systemOverview: 'System Overview',
        currentBlockchainStatus: 'Current blockchain status',
        polStatistics: 'PoL Statistics',
        lastUpdate: 'Last Update',
        modelName: 'Model Name',
        architectureLabel: 'Architecture',
        layers: 'Layers',
        expertsPerLayer: 'Experts per Layer',
        routingStrategy: 'Routing Strategy',
        hiddenSize: 'Hidden Size',
        metaBlockDetails: 'Meta Block Details',
        timestamp: 'Timestamp',
        payloadSize: 'Payload Size',
        blockHash: 'Block Hash',
        index: 'Index',
        view: 'View',
        threshold: 'Threshold',
        passRate: 'Pass Rate',
        avgDeltaScore: 'Avg Œî Score',
        unknownLabel: 'Unknown',
        standardLabel: 'Standard',
        
        // Parameter Chain tab
        expertBlocks: 'Expert Blocks',
        searchExpert: 'Search Expert',
        layer: 'Layer',
        blockType: 'Block Type',
        allLayers: 'All Layers',
        allTypes: 'All Types',
        expert: 'Expert',
        router: 'Router',
        allStatus: 'All Status',
        filter: 'üîç Filter',
        clear: 'Clear',
        expertName: 'Expert Name',
        type: 'Type',
        size: 'Size (KB)',
        usageCount: 'Usage Count',
        deltaScore: 'Œî Score',
        actions: 'Actions',
        loadingExpertBlocks: 'Loading expert blocks...',
        
        // Expert Analytics tab
        expertPerformanceAnalytics: 'Expert Performance Analytics',
        topPerformingExperts: 'Top Performing Experts',
        expertUsageDistribution: 'Expert Usage Distribution',
        averageLatency: 'Average Latency',
        totalInferenceRequests: 'Total Inference Requests',
        activeExperts: 'Active Experts',
        
        // P2P Network tab
        registeredNodes: 'Registered Nodes',
        nodeManagement: 'Node Management',
        expertDistribution: 'Expert Distribution',
        networkTopology: 'Network Topology',
        
        // Common
        loading: 'Loading...',
        viewDetails: 'View Details',
        download: 'Download',
        noDataAvailable: 'No data available',
        noMetaBlocksFound: 'No meta blocks found.',
        noExpertBlocksFound: 'No expert blocks found',
        loadingDagStructure: 'Loading DAG structure...',
        dagFeatureDescription: 'This feature visualizes the blockchain DAG using D3.js',
        expertBlocksLabel: 'Expert Blocks',
        routerBlocksLabel: 'Router Blocks',
        blockCreationTimeline: 'Block Creation Timeline',
        averageDeltaScore: 'Average Œî Score',
        improvementScoreTrends: 'Improvement Score Trends',
        deltaScore: 'Delta Score',
        polSystemPerformance: 'PoL System Performance',
        qualityScore: 'Quality Score',
        speed: 'Speed',
        reliability: 'Reliability',
        minutesAgoUnit: 'm ago',
        hoursAgoUnit: 'h ago',
        daysAgoUnit: 'd ago',
        justNow: 'Just now',
        inactive: 'Inactive',

        // Leaderboard page
        leaderboardPageTitle: 'Blyan Network Leaderboard',
        leaderboardPageSubtitle: 'Top contributors and nodes powering decentralized AI',
        myDashboard: 'My Dashboard',
        topNodes: 'Top Nodes',
        topExperts: 'Top Experts',
        topContributors: 'Top Contributors',
        nodePerformanceRankings: 'Node Performance Rankings',
        refresh: 'Refresh',
        refreshing: 'Refreshing...',
        refreshed: 'Refreshed!',
        failedGeneric: 'Failed',
        rank: 'Rank',
        nodeId: 'Node ID',
        statusHeader: 'Status',
        reputation: 'Reputation',
        successRate: 'Success Rate',
        avgResponse: 'Avg Response',
        contributionScore: 'Contribution Score',
        expertsServed: 'Experts Served',
        loadingNodeRankings: 'Loading node rankings...',
        failedToLoadNodeRankings: 'Failed to load node rankings',
        noNodesAvailable: 'No nodes available',
        expertUsageRankings: 'Expert Usage Rankings',
        callCount: 'Call Count',
        avgResponseTime: 'Avg Response Time',
        specialization: 'Specialization',
        loadingExpertRankings: 'Loading expert rankings...',
        failedToLoadExpertRankings: 'Failed to load expert rankings',
        noExpertDataAvailable: 'No expert data available',
        address: 'Address',
        level: 'Level',
        validations: 'Validations',
        datasets: 'Datasets',
        loadingContributorRankings: 'Loading contributor rankings...',
        failedToLoadContributorRankings: 'Failed to load contributor rankings',
        noContributorDataAvailable: 'No contributor data available',
        myRank: 'My Rank',
        trustLevel: 'Trust Level',
        totalRewards: 'Total Rewards',
        freeRequests: 'Free Requests',
        achievements: 'Achievements',
        completeFirstContribution: 'Complete your first contribution to earn badges!',
        newUser: 'New User',
        welcomeToBlyan: 'Welcome to Blyan!',
        getStartedMessage: 'Get started by using the chat interface or contributing data to earn your first badges!'
    },
    
    ko: {
        // Header
        home: 'Ìôà',
        chat: 'Ï±ÑÌåÖ',
        
        leaderboard: 'Î¶¨ÎçîÎ≥¥Îìú',
        joinNetwork: 'ÎÑ§Ìä∏ÏõåÌÅ¨ Ï∞∏Ïó¨',
        technical: 'Í∏∞Ïà† Ï†ïÎ≥¥',
        connectWallet: 'ÏßÄÍ∞ë Ïó∞Í≤∞',
        apiStatus: 'API',
        polStatus: 'PoL',
        offline: 'Ïò§ÌîÑÎùºÏù∏',
        online: 'Ïò®ÎùºÏù∏',
        enabled: 'ÌôúÏÑ±Ìôî',
        disabled: 'ÎπÑÌôúÏÑ±Ìôî',
        unknown: 'Ïïå Ïàò ÏóÜÏùå',
        
        // Home page - Hero section
        heroTitle: 'Blyan',
        heroSubtitle: 'ÏÑ∏Í≥Ñ ÏµúÏ¥à Î∂ÑÏÇ∞Ìòï AI ÎÑ§Ìä∏ÏõåÌÅ¨',
        heroDescription: 'ÏßëÎã® ÏßÄÏÑ±ÏúºÎ°ú Íµ¨ÎèôÎêòÎäî AIÎ•º Í≤ΩÌóòÌïòÏÑ∏Ïöî. AIÏôÄ ÎåÄÌôîÌïòÍ±∞ÎÇò Ïª¥Ìì®ÌåÖ ÌååÏõåÎ•º Ï†úÍ≥µÌïòÏó¨ Î≥¥ÏÉÅÏùÑ Î∞õÏúºÏÑ∏Ïöî.',
        
        // Vision section (new)
        visionTitle: 'Ïôú BlyanÏùÑ ÎßåÎì§ÏóàÎÇò',
        visionTrustworthy: 'Ìà¨Î™ÖÌïú AI',
        visionTrustworthyDesc: 'Î™®Îì† Í∞ÄÏ§ëÏπò, Î™®Îì† Í≤∞Ï†ï, Î™®Îì† Í∞úÏÑ†ÏÇ¨Ìï≠Ïù¥ Î∏îÎ°ùÏ≤¥Ïù∏Ïóê Î∂àÎ≥ÄÌïòÍ≤å Í∏∞Î°ùÎê©ÎãàÎã§.',
        visionDemocratic: 'AI Í∞úÎ∞úÏùò ÌÉàÏ§ëÏïôÌôî',
        visionDemocraticDesc: 'Îçî Ïù¥ÏÉÅ ÎåÄÍ∏∞ÏóÖÎßåÏùò Ï†ÑÏú†Î¨ºÏù¥ ÏïÑÎãôÎãàÎã§. Ìï®ÍªòÎùºÎ©¥ Ïö∞Î¶¨ÎèÑ AI Î™®Îç∏ÏùÑ ÎßåÎì§Í≥† Î∞úÏ†ÑÏãúÌÇ¨ Ïàò ÏûàÏäµÎãàÎã§.',
        visionEvolution: 'Î∏îÎ°ùÏ≤¥Ïù∏ ÏúÑ AI ÏßÑÌôî',
        visionEvolutionDesc: 'AIÍ∞Ä Î∏îÎ°ùÏ≤¥Ïù∏Ïóê Ï∂îÍ∞ÄÎêòÎäî ÌïôÏäµÏùÑ ÌÜµÌï¥ ÏßÑÌôîÌï©ÎãàÎã§.',
        visionComparison: 'ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî? ÎπÑÌä∏ÏΩîÏù∏Ïù¥ Îã® 3ÏãúÍ∞Ñ ÎèôÏïà ÏÇ¨Ïö©ÌïòÎäî ÏóêÎÑàÏßÄÎ°ú GPT-4 ÏàòÏ§ÄÏùò AI Î™®Îç∏ÏùÑ ÌïôÏäµÏãúÌÇ¨ Ïàò ÏûàÏäµÎãàÎã§. Proof-of-LearningÏúºÎ°ú Ïö∞Î¶¨Îäî Ïó∞ÏÇ∞ÏùÑ ÏßÄÎä•ÏúºÎ°ú Î∞îÍøâÎãàÎã§.',
        
        // Action cards
        chatWithAI: 'BlyanÍ≥º ÎåÄÌôîÌïòÍ∏∞',    
        chatDescription: 'BlyanÍ≥º ÎåÄÌôîÎ•º ÏãúÏûëÌïòÏÑ∏Ïöî. ÎÑ§Ìä∏ÏõåÌÅ¨ Ï†ÑÎ∞òÏùò Î∂ÑÏÇ∞ Ï†ÑÎ¨∏Í∞ÄÎì§Ïù¥ Ï†úÍ≥µÌï©ÎãàÎã§.',
        startChatting: 'Ï±ÑÌåÖ ÏãúÏûë',
        uploadDataset: 'Îç∞Ïù¥ÌÑ∞ÏÖã ÏóÖÎ°úÎìú',
        uploadDescription: 'Blyan Î™®Îç∏ Í∞úÏÑ†ÏùÑ ÏúÑÌïú ÌïôÏäµ Îç∞Ïù¥ÌÑ∞Î•º Í∏∞Ïó¨ÌïòÏÑ∏Ïöî. ÎØºÏ£ºÏ†Å Í±∞Î≤ÑÎÑåÏä§ÏôÄ Ìï®Íªò Î¨¥Î£åÎ°ú Ï∞∏Ïó¨ Í∞ÄÎä•Ìï©ÎãàÎã§.',
        uploadNow: 'ÏßÄÍ∏à ÏóÖÎ°úÎìú',
        joinTheNetwork: 'ÎÑ§Ìä∏ÏõåÌÅ¨ Ï∞∏Ïó¨',
        joinDescription: 'Ïª¥Ìì®ÌåÖ ÌååÏõåÎ•º Í≥µÏú†ÌïòÍ≥† Î≥¥ÏÉÅÏùÑ Î∞õÏúºÏÑ∏Ïöî. ÏõêÌÅ¥Î¶≠ÏúºÎ°ú Blyan ÎÑ§Ìä∏ÏõåÌÅ¨Ïùò ÏùºÏõêÏù¥ ÎêòÏÑ∏Ïöî.',
        joinNow: 'ÏßÄÍ∏à Ï∞∏Ïó¨',
        datasetExplorer: 'Îç∞Ïù¥ÌÑ∞ÏÖã ÌÉêÏÉâÍ∏∞',
        explorerDescription: 'Ïª§ÎÆ§ÎãàÌã∞ Îç∞Ïù¥ÌÑ∞ÏÖãÏùÑ ÌÉêÏÉâÌïòÍ≥†, Ï†úÏïàÏóê Ìà¨ÌëúÌïòÎ©∞, Ïã§ÏãúÍ∞ÑÏúºÎ°ú Îç∞Ïù¥ÌÑ∞ Í±∞Î≤ÑÎÑåÏä§Î•º Ï∂îÏ†ÅÌïòÏÑ∏Ïöî.',
        exploreDatasets: 'Îç∞Ïù¥ÌÑ∞ÏÖã ÌÉêÏÉâ',
        
        // Network status
        networkStatus: 'ÎÑ§Ìä∏ÏõåÌÅ¨ ÏÉÅÌÉú',
        activeExperts: 'ÌôúÏÑ± Ï†ÑÎ¨∏Í∞Ä',
        networkNodes: 'ÎÑ§Ìä∏ÏõåÌÅ¨ ÎÖ∏Îìú',
        totalRequests: 'Ï¥ù ÏöîÏ≤≠ Ïàò',
        networkHealth: 'ÎÑ§Ìä∏ÏõåÌÅ¨ ÏÉÅÌÉú',
        
        // Footer
        advancedFeatures: 'Í≥†Í∏â Í∏∞Îä•ÏùÑ Ï∞æÍ≥† Í≥ÑÏã†Í∞ÄÏöî?',
        viewDashboard: 'Í∏∞Ïà† ÎåÄÏãúÎ≥¥Îìú Î∞è Î∂ÑÏÑù Î≥¥Í∏∞ ‚Üí',
        
        // Chat page
        aiChat: 'BlyanÍ≥º Ï±ÑÌåÖ',
        chatWithDistributed: 'Blyan Î∂ÑÏÇ∞ ÎÑ§Ìä∏ÏõåÌÅ¨ÏôÄ ÎåÄÌôîÌïòÍ∏∞',
        aiAssistant: 'Blyan',
        aiWelcomeMessage: 'ÏïàÎÖïÌïòÏÑ∏Ïöî! Ï†ÄÎäî Blyan Î∂ÑÏÇ∞ ÎÑ§Ìä∏ÏõåÌÅ¨Î°ú Íµ¨ÎèôÎê©ÎãàÎã§. Î¨¥ÏóáÏù¥Îì† Î¨ºÏñ¥Î≥¥ÏÑ∏Ïöî!',
        aiThinking: 'BlyanÏù¥ ÏÉùÍ∞Å Ï§ëÏûÖÎãàÎã§...',
        typeYourMessage: 'Î©îÏãúÏßÄÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî...',
        send: 'Ï†ÑÏÜ°',
        sendMessage: 'Î©îÏãúÏßÄ Ï†ÑÏÜ°',
        
        // Join Network page
        joinNetworkTitle: 'Blyan ÎÑ§Ìä∏ÏõåÌÅ¨ Ï∞∏Ïó¨',
        shareComputingPower: 'Ïª¥Ìì®ÌåÖ ÌååÏõåÎ•º Í≥µÏú†ÌïòÍ≥† Î≥¥ÏÉÅÏùÑ Î∞õÏúºÏÑ∏Ïöî',
        systemCheck: 'ÏãúÏä§ÌÖú ÌôïÏù∏',
        checkRequirements: 'Ïª¥Ìì®ÌÑ∞Í∞Ä ÏöîÍµ¨ ÏÇ¨Ìï≠ÏùÑ Ï∂©Ï°±ÌïòÎäîÏßÄ ÌôïÏù∏Ìï¥Î≥¥Í≤†ÏäµÎãàÎã§:',
        cpuRequirement: 'CPU: Î©ÄÌã∞ÏΩîÏñ¥ ÌîÑÎ°úÏÑ∏ÏÑú',
        memoryRequirement: 'Î©îÎ™®Î¶¨: ÏµúÏÜå 4GB RAM ÌïÑÏöî',
        networkRequirement: 'ÎÑ§Ìä∏ÏõåÌÅ¨: ÏïàÏ†ïÏ†ÅÏù∏ Ïù∏ÌÑ∞ÎÑ∑ Ïó∞Í≤∞',
        gpuRequirement: 'GPU: AI Í∞ÄÏÜç ÌïòÎìúÏõ®Ïñ¥ ÌôïÏù∏ Ï§ë',
        browserRequirement: 'Î∏åÎùºÏö∞Ï†Ä: WebAssembly ÏßÄÏõê ÏµúÏã† Î∏åÎùºÏö∞Ï†Ä',
        checkMySystem: 'ÏãúÏä§ÌÖú ÌôïÏù∏ÌïòÍ∏∞',
        startYourNode: 'ÎÖ∏Îìú ÏãúÏûëÌïòÍ∏∞',
        oneClickSetup: 'ÏõêÌÅ¥Î¶≠ÏúºÎ°ú Ï†ÑÎ¨∏Í∞Ä ÎÖ∏ÎìúÎ°ú ÎÑ§Ìä∏ÏõåÌÅ¨Ïóê Ï∞∏Ïó¨:',
        nodeName: 'ÎÖ∏Îìú Ïù¥Î¶Ñ:',
        processingMode: 'Ï≤òÎ¶¨ Î™®Îìú:',
        cpuLight: 'CPU Ï†ÑÏö© - 25% (Í∞ÄÎ≤ºÏõÄ)',
        cpuBalanced: 'CPU Ï†ÑÏö© - 50% (Í∑†Ìòï)',
        cpuHigh: 'CPU Ï†ÑÏö© - 75% (ÎÜíÏùå)',
        gpuLight: 'GPU Í∞ÄÏÜç - 25%',
        gpuBalanced: 'GPU Í∞ÄÏÜç - 50%',
        gpuHigh: 'GPU Í∞ÄÏÜç - 75%',
        startMyNode: 'üöÄ ÎÇ¥ ÎÖ∏Îìú ÏãúÏûë',
        nodeRunning: '‚úÖ ÎÖ∏ÎìúÍ∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§Ìñâ Ï§ëÏûÖÎãàÎã§!',
        nodeId: 'ÎÖ∏Îìú ID:',
        status: 'ÏÉÅÌÉú:',
        active: 'ÌôúÏÑ±',
        requestsServed: 'Ï≤òÎ¶¨Îêú ÏöîÏ≤≠:',
        disconnectNode: 'üîå ÎÖ∏Îìú Ïó∞Í≤∞ Ìï¥Ï†ú',
        earnRewards: 'Î≥¥ÏÉÅ ÌöçÎìù',
        estimatedEarnings: 'ÎÑ§Ìä∏ÏõåÌÅ¨ ÌôúÎèô Í∏∞Î∞ò ÏòàÏÉÅ ÏàòÏùµ:',
        perDay: 'ÏùºÏùº (ÏòàÏÉÅ)',
        earningsNote: 'üí° RTX 3090 Î≤§ÏπòÎßàÌÅ¨ Í∏∞Ï§Ä ÏàòÏùµ (10Í∞ú GPUÎ°ú ~$210/Ïùº). Ïã§Ï†ú ÏàòÏùµÏùÄ Îã§Î•º Ïàò ÏûàÏäµÎãàÎã§.',
        advancedOptions: 'Í≥†Í∏â ÏòµÏÖò',
        wantMoreControl: 'Îçî ÎßéÏùÄ Ï†úÏñ¥Í∞Ä ÌïÑÏöîÌïòÏã†Í∞ÄÏöî?',
        technicalDashboard: 'Í∏∞Ïà† ÎåÄÏãúÎ≥¥Îìú',
        expertNodeManagement: 'ÏóêÏÑú Ï†ÑÎ¨∏Í∞Ä ÎÖ∏Îìú Í¥ÄÎ¶¨ Î∞è ÏÉÅÏÑ∏ Î∂ÑÏÑùÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî.',
        
        // Technical/Explorer page
        explorerTitle: 'Blyan ÌÉêÏÉâÍ∏∞',
        overview: 'Í∞úÏöî',
        blockchainOverview: 'Î∏îÎ°ùÏ≤¥Ïù∏ Í∞úÏöî',
        expertManagement: 'Ï†ÑÎ¨∏Í∞Ä Í¥ÄÎ¶¨',
        expertAnalytics: 'Ï†ÑÎ¨∏Í∞Ä Î∂ÑÏÑù',
        dagView: 'DAG Î∑∞',
        p2pNetwork: 'P2P ÎÑ§Ìä∏ÏõåÌÅ¨',
        
        // Blockchain Overview tab
        systemOverview: 'ÏãúÏä§ÌÖú Í∞úÏöî',
        currentBlockchainStatus: 'ÌòÑÏû¨ Î∏îÎ°ùÏ≤¥Ïù∏ ÏÉÅÌÉú',
        polStatistics: 'PoL ÌÜµÍ≥Ñ',
        metaChain: 'Î©îÌÉÄ Ï≤¥Ïù∏ (ÏïÑÌÇ§ÌÖçÏ≤ò)',
        parameterChain: 'ÌååÎùºÎØ∏ÌÑ∞ Ï≤¥Ïù∏ (Ï†ÑÎ¨∏Í∞Ä)',
        chainHeight: 'Ï≤¥Ïù∏ ÎÜíÏù¥',
        totalBlocks: 'Ï†ÑÏ≤¥ Î∏îÎ°ù',
        lastUpdate: 'ÏµúÍ∑º ÏóÖÎç∞Ïù¥Ìä∏',
        modelArchitecture: 'Î™®Îç∏ ÏïÑÌÇ§ÌÖçÏ≤ò',
        modelName: 'Î™®Îç∏ Ïù¥Î¶Ñ',
        architectureLabel: 'ÏïÑÌÇ§ÌÖçÏ≤ò',
        layers: 'Î†àÏù¥Ïñ¥',
        expertsPerLayer: 'Î†àÏù¥Ïñ¥Îãπ Ï†ÑÎ¨∏Í∞Ä',
        routingStrategy: 'ÎùºÏö∞ÌåÖ Ï†ÑÎûµ',
        hiddenSize: 'ÌûàÎì† ÌÅ¨Í∏∞',
        metaBlockDetails: 'Î©îÌÉÄ Î∏îÎ°ù ÏÉÅÏÑ∏',
        timestamp: 'ÌÉÄÏûÑÏä§ÌÉ¨ÌîÑ',
        payloadSize: 'ÌéòÏù¥Î°úÎìú ÌÅ¨Í∏∞',
        blockHash: 'Î∏îÎ°ù Ìï¥Ïãú',
        index: 'Ïù∏Îç±Ïä§',
        view: 'Î≥¥Í∏∞',
        threshold: 'ÏûÑÍ≥ÑÍ∞í',
        passRate: 'ÌÜµÍ≥ºÏú®',
        avgDeltaScore: 'ÌèâÍ∑† Œî Ï†êÏàò',
        unknownLabel: 'Ïïå Ïàò ÏóÜÏùå',
        standardLabel: 'ÌëúÏ§Ä',
        
        // Parameter Chain tab
        expertBlocks: 'Ï†ÑÎ¨∏Í∞Ä Î∏îÎ°ù',
        searchExpert: 'Ï†ÑÎ¨∏Í∞Ä Í≤ÄÏÉâ',
        layer: 'Î†àÏù¥Ïñ¥',
        blockType: 'Î∏îÎ°ù ÌÉÄÏûÖ',
        allLayers: 'Î™®Îì† Î†àÏù¥Ïñ¥',
        allTypes: 'Î™®Îì† ÌÉÄÏûÖ',
        expert: 'Ï†ÑÎ¨∏Í∞Ä',
        router: 'ÎùºÏö∞ÌÑ∞',
        allStatus: 'Î™®Îì† ÏÉÅÌÉú',
        filter: 'üîç ÌïÑÌÑ∞',
        clear: 'Ï¥àÍ∏∞Ìôî',
        expertName: 'Ï†ÑÎ¨∏Í∞Ä Ïù¥Î¶Ñ',
        type: 'ÌÉÄÏûÖ',
        size: 'ÌÅ¨Í∏∞ (KB)',
        usageCount: 'ÏÇ¨Ïö© ÌöüÏàò',
        deltaScore: 'Œî Ï†êÏàò',
        actions: 'ÏûëÏóÖ',
        loadingExpertBlocks: 'Ï†ÑÎ¨∏Í∞Ä Î∏îÎ°ù Î°úÎî© Ï§ë...',
        
        // Expert Analytics tab
        expertPerformanceAnalytics: 'Ï†ÑÎ¨∏Í∞Ä ÏÑ±Îä• Î∂ÑÏÑù',
        topPerformingExperts: 'ÏµúÍ≥† ÏÑ±Îä• Ï†ÑÎ¨∏Í∞Ä',
        expertUsageDistribution: 'Ï†ÑÎ¨∏Í∞Ä ÏÇ¨Ïö© Î∂ÑÌè¨',
        averageLatency: 'ÌèâÍ∑† ÏßÄÏó∞ÏãúÍ∞Ñ',
        totalInferenceRequests: 'Ï†ÑÏ≤¥ Ï∂îÎ°† ÏöîÏ≤≠',
        activeExperts: 'ÌôúÏÑ± Ï†ÑÎ¨∏Í∞Ä',
        
        // P2P Network tab
        registeredNodes: 'Îì±Î°ùÎêú ÎÖ∏Îìú',
        nodeManagement: 'ÎÖ∏Îìú Í¥ÄÎ¶¨',
        expertDistribution: 'Ï†ÑÎ¨∏Í∞Ä Î∂ÑÌè¨',
        networkTopology: 'ÎÑ§Ìä∏ÏõåÌÅ¨ ÌÜ†Ìè¥Î°úÏßÄ',
        
        // Common
        loading: 'Î°úÎî© Ï§ë...',
        viewDetails: 'ÏÉÅÏÑ∏ Î≥¥Í∏∞',
        download: 'Îã§Ïö¥Î°úÎìú',
        noDataAvailable: 'Îç∞Ïù¥ÌÑ∞ ÏóÜÏùå',
        noMetaBlocksFound: 'Î©îÌÉÄ Î∏îÎ°ùÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.',
        noExpertBlocksFound: 'Ï†ÑÎ¨∏Í∞Ä Î∏îÎ°ùÏù¥ ÏóÜÏäµÎãàÎã§',
        loadingDagStructure: 'DAG Íµ¨Ï°∞Î•º Î∂àÎü¨Ïò§Îäî Ï§ë...',
        dagFeatureDescription: 'Ïù¥ Í∏∞Îä•ÏùÄ D3.jsÎ°ú Î∏îÎ°ùÏ≤¥Ïù∏ DAGÎ•º ÏãúÍ∞ÅÌôîÌï©ÎãàÎã§',
        expertBlocksLabel: 'Ï†ÑÎ¨∏Í∞Ä Î∏îÎ°ù',
        routerBlocksLabel: 'ÎùºÏö∞ÌÑ∞ Î∏îÎ°ù',
        blockCreationTimeline: 'Î∏îÎ°ù ÏÉùÏÑ± ÌÉÄÏûÑÎùºÏù∏',
        averageDeltaScore: 'ÌèâÍ∑† Œî Ï†êÏàò',
        improvementScoreTrends: 'Í∞úÏÑ† Ï†êÏàò Ï∂îÏÑ∏',
        deltaScore: 'Îç∏ÌÉÄ Ï†êÏàò',
        polSystemPerformance: 'PoL ÏãúÏä§ÌÖú ÏÑ±Îä•',
        qualityScore: 'ÌíàÏßà Ï†êÏàò',
        speed: 'ÏÜçÎèÑ',
        reliability: 'Ïã†Î¢∞ÎèÑ',
        minutesAgoUnit: 'Î∂Ñ Ï†Ñ',
        hoursAgoUnit: 'ÏãúÍ∞Ñ Ï†Ñ',
        daysAgoUnit: 'Ïùº Ï†Ñ',
        justNow: 'Î∞©Í∏à Ï†Ñ',
        inactive: 'ÎπÑÌôúÏÑ±',

        // Leaderboard page
        leaderboardPageTitle: 'Blyan ÎÑ§Ìä∏ÏõåÌÅ¨ Î¶¨ÎçîÎ≥¥Îìú',
        leaderboardPageSubtitle: 'ÌÉàÏ§ëÏïôÌôî AIÎ•º ÏßÄÏõêÌïòÎäî ÏµúÍ≥†Ïùò Í∏∞Ïó¨ÏûêÏôÄ ÎÖ∏Îìú',
        myDashboard: 'ÎÇ¥ ÎåÄÏãúÎ≥¥Îìú',
        topNodes: 'Ïö∞Ïàò ÎÖ∏Îìú',
        topExperts: 'Ïö∞Ïàò Ï†ÑÎ¨∏Í∞Ä',
        topContributors: 'Ïö∞Ïàò Í∏∞Ïó¨Ïûê',
        nodePerformanceRankings: 'ÎÖ∏Îìú ÏÑ±Îä• ÏàúÏúÑ',
        refresh: 'ÏÉàÎ°úÍ≥†Ïπ®',
        refreshing: 'ÏÉàÎ°úÍ≥†ÏπòÎäî Ï§ë...',
        refreshed: 'ÏÉàÎ°úÍ≥†Ïπ® ÏôÑÎ£å!',
        failedGeneric: 'Ïã§Ìå®',
        rank: 'ÏàúÏúÑ',
        nodeId: 'ÎÖ∏Îìú ID',
        statusHeader: 'ÏÉÅÌÉú',
        reputation: 'ÌèâÌåê',
        successRate: 'ÏÑ±Í≥µÎ•†',
        avgResponse: 'ÌèâÍ∑† ÏùëÎãµ',
        contributionScore: 'Í∏∞Ïó¨ Ï†êÏàò',
        expertsServed: 'Ï†úÍ≥µ Ï†ÑÎ¨∏Í∞Ä Ïàò',
        loadingNodeRankings: 'ÎÖ∏Îìú ÏàúÏúÑÎ•º Î∂àÎü¨Ïò§Îäî Ï§ë...',
        failedToLoadNodeRankings: 'ÎÖ∏Îìú ÏàúÏúÑÎ•º Î∂àÎü¨Ïò§ÏßÄ Î™ªÌñàÏäµÎãàÎã§',
        noNodesAvailable: 'ÎÖ∏Îìú Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏäµÎãàÎã§',
        expertUsageRankings: 'Ï†ÑÎ¨∏Í∞Ä ÏÇ¨Ïö© ÏàúÏúÑ',
        callCount: 'Ìò∏Ï∂ú Ïàò',
        avgResponseTime: 'ÌèâÍ∑† ÏùëÎãµ ÏãúÍ∞Ñ',
        specialization: 'Ï†ÑÎ¨∏ Î∂ÑÏïº',
        loadingExpertRankings: 'Ï†ÑÎ¨∏Í∞Ä ÏàúÏúÑÎ•º Î∂àÎü¨Ïò§Îäî Ï§ë...',
        failedToLoadExpertRankings: 'Ï†ÑÎ¨∏Í∞Ä ÏàúÏúÑÎ•º Î∂àÎü¨Ïò§ÏßÄ Î™ªÌñàÏäµÎãàÎã§',
        noExpertDataAvailable: 'Ï†ÑÎ¨∏Í∞Ä Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏäµÎãàÎã§',
        address: 'Ï£ºÏÜå',
        level: 'Î†àÎ≤®',
        validations: 'Í≤ÄÏ¶ù Ïàò',
        datasets: 'Îç∞Ïù¥ÌÑ∞ÏÖã',
        loadingContributorRankings: 'Í∏∞Ïó¨Ïûê ÏàúÏúÑÎ•º Î∂àÎü¨Ïò§Îäî Ï§ë...',
        failedToLoadContributorRankings: 'Í∏∞Ïó¨Ïûê ÏàúÏúÑÎ•º Î∂àÎü¨Ïò§ÏßÄ Î™ªÌñàÏäµÎãàÎã§',
        noContributorDataAvailable: 'Í∏∞Ïó¨Ïûê Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏäµÎãàÎã§',
        myRank: 'ÎÇ¥ ÏàúÏúÑ',
        trustLevel: 'Ïã†Î¢∞ Îì±Í∏â',
        totalRewards: 'ÎàÑÏ†Å Î≥¥ÏÉÅ',
        freeRequests: 'Î¨¥Î£å ÏöîÏ≤≠',
        achievements: 'ÏóÖÏ†Å',
        completeFirstContribution: 'Ï≤´ Í∏∞Ïó¨Î•º ÏôÑÎ£åÌïòÍ≥† Î∞∞ÏßÄÎ•º ÌöçÎìùÌïòÏÑ∏Ïöî!',
        newUser: 'Ïã†Í∑ú ÏÇ¨Ïö©Ïûê',
        welcomeToBlyan: 'BlyanÏóê Ïò§Ïã† Í≤ÉÏùÑ ÌôòÏòÅÌï©ÎãàÎã§!',
        getStartedMessage: 'Ï±ÑÌåÖ Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º ÏÇ¨Ïö©ÌïòÍ±∞ÎÇò Îç∞Ïù¥ÌÑ∞Î•º Í∏∞Ïó¨ÌïòÏó¨ Ï≤´ Î∞∞ÏßÄÎ•º ÌöçÎìùÌïòÏÑ∏Ïöî!',
        // Community
        communityTitle: 'Ïª§ÎÆ§ÎãàÌã∞',
        newPost: 'ÏÉà Í∏Ä',
        writePost: 'Í∏ÄÏì∞Í∏∞',
        postTitlePlaceholder: 'Ï†úÎ™©',
        postContentPlaceholder: 'ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî...',
        publish: 'Í≤åÏãú',
        cancel: 'Ï∑®ÏÜå',
        comments: 'ÎåìÍ∏Ä',
        addComment: 'ÎåìÍ∏ÄÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî...',
        reply: 'ÎãµÍ∏Ä',
        like: 'Ï¢ãÏïÑÏöî',
        unlike: 'Ï¢ãÏïÑÏöî Ï∑®ÏÜå'
    }
};

// Current language state
let currentLanguage = localStorage.getItem('blyan-language') || 'en';

// Get translation
function t(key) {
    return translations[currentLanguage][key] || translations['en'][key] || key;
}

// Update all translatable elements
function updatePageLanguage() {
    // Update elements with data-i18n attribute
    document.querySelectorAll('[data-i18n]').forEach(element => {
        const key = element.getAttribute('data-i18n');
        element.textContent = t(key);
    });
    
    // Update elements with data-i18n-placeholder attribute
    document.querySelectorAll('[data-i18n-placeholder]').forEach(element => {
        const key = element.getAttribute('data-i18n-placeholder');
        element.placeholder = t(key);
    });
    
    // Update page title if it has a translation key
    const titleElement = document.querySelector('title');
    if (titleElement && titleElement.hasAttribute('data-i18n')) {
        const key = titleElement.getAttribute('data-i18n');
        titleElement.textContent = t(key);
    }
}

// Change language
function changeLanguage(lang) {
    if (translations[lang]) {
        currentLanguage = lang;
        localStorage.setItem('blyan-language', lang);
        updatePageLanguage();
        
        // Refresh header if it exists
        if (typeof refreshHeader === 'function') {
            refreshHeader();
        }
    }
}

// Initialize language on page load
document.addEventListener('DOMContentLoaded', () => {
    updatePageLanguage();
});

// Create language selector HTML
function createLanguageSelector() {
    return `
        <select id="language-selector" class="language-selector" onchange="changeLanguage(this.value)">
            <option value="en" ${currentLanguage === 'en' ? 'selected' : ''}>üá∫üá∏ English</option>
            <option value="ko" ${currentLanguage === 'ko' ? 'selected' : ''}>üá∞üá∑ ÌïúÍµ≠Ïñ¥</option>
        </select>
    `;
}